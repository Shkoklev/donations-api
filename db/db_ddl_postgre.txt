--CREATE OR REPLACE FUNCTION check_email(email varchar)
--RETURNS integer AS $result$
--declare
--	result integer;
--BEGIN 
--	SELECT (COUNT(*) = 0) 
--	into result
--	FROM donor d,administrator a,organization o
--	WHERE d.email = a.email 
--	OR d.email = o.email 
--	OR a.email = o.email;
--	return result;
--END;
--$result$ LANGUAGE plpgsql;


CREATE TABLE "donor" (
	"id" BIGSERIAL PRIMARY KEY,
	"first_name" varchar(20) NOT NULL,
	"last_name" varchar(30) NOT NULL,
	"email" varchar UNIQUE NOT NULL,
	"password" varchar NOT NULL,
	"phone" varchar(15) UNIQUE NOT NULL,
	"picture_url" varchar,
	"points" INT,
	"failed_consecutive_donations" SMALLINT
);

CREATE TABLE "administrator" (
	"id" BIGSERIAL PRIMARY KEY,
	"email" varchar UNIQUE NOT NULL,
	"password" varchar NOT NULL
);

CREATE TABLE "demand_category" (
	"id" BIGSERIAL PRIMARY KEY,
	"name" varchar(50) UNIQUE NOT NULL
);

CREATE TABLE "demand" (
	"id" BIGSERIAL PRIMARY KEY,
	"name" varchar(50) UNIQUE NOT NULL,
	"category" BIGINT REFERENCES "demand_category"(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE "organization_category" (
	"id" BIGSERIAL PRIMARY KEY,
	"name" varchar(30) UNIQUE NOT NULL,
	"picture_url" varchar
);

CREATE TABLE "organization" (
	"id" BIGSERIAL PRIMARY KEY,
	"name" varchar(30) UNIQUE NOT NULL,
	"phone" varchar(15) UNIQUE NOT NULL,
	"email" varchar UNIQUE NOT NULL,
	"password" varchar NOT NULL,
	"category" BIGINT REFERENCES "organization_category"(id) 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE "organization_demand" (
	"id" BIGSERIAL PRIMARY KEY,
	"organization" BIGINT REFERENCES "organization"(id)
		 ON DELETE SET NULL 
		 ON UPDATE CASCADE,
  	"demand" BIGINT REFERENCES "demand"(id)
		 ON DELETE CASCADE
		 ON UPDATE CASCADE,
	"quantity" varchar NOT NULL
);	


CREATE TABLE "donation" (
	"id" BIGSERIAL PRIMARY KEY,
	"donor" BIGINT REFERENCES "donor"(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	"organization" BIGINT REFERENCES "organization"(id) 
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	"demand" BIGINT REFERENCES "demand"(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	"points" INT,
	"status" varchar(20),
	"quantity" varchar NOT NULL,
	"duration" TIMESTAMP WITHOUT TIME ZONE
);









